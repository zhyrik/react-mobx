{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\n\nclass Toodo {\n  constructor() {\n    this.toodos = [{\n      id: 1,\n      title: 'some text',\n      flag: false\n    }, {\n      id: 2,\n      title: 'some text',\n      flag: true\n    }, {\n      id: 3,\n      title: 'some text',\n      flag: false\n    }];\n    makeAutoObservable(this);\n  }\n\n  addToodo(toodo) {\n    this.toodos.push(toodo);\n  }\n\n  removeToodo(id) {\n    this.toodos = this.toodos.filter(toodo => toodo.id != id);\n  }\n\n  compliteToodo(id) {\n    this.toodos = this.toodos.map(toodo => toodo.id != id ? { ...toodo,\n      flag: !toodo.flag\n    } : toodo);\n  }\n\n}\n\nexport default Toodo();","map":{"version":3,"sources":["/home/z/Desktop/react1/mobx/src/store/toodo.js"],"names":["makeAutoObservable","Toodo","constructor","toodos","id","title","flag","addToodo","toodo","push","removeToodo","filter","compliteToodo","map"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,MAAnC;;AAGA,MAAMC,KAAN,CAAY;AAMRC,EAAAA,WAAW,GAAG;AAAA,SALdC,MAKc,GALL,CACL;AAACC,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,KAAK,EAAE,WAAf;AAA4BC,MAAAA,IAAI,EAAE;AAAlC,KADK,EAEL;AAACF,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,KAAK,EAAE,WAAf;AAA4BC,MAAAA,IAAI,EAAE;AAAlC,KAFK,EAGL;AAACF,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,KAAK,EAAE,WAAf;AAA4BC,MAAAA,IAAI,EAAE;AAAlC,KAHK,CAKK;AACVN,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;;AACDO,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AAAC,SAAKL,MAAL,CAAYM,IAAZ,CAAiBD,KAAjB;AAAwB;;AACzCE,EAAAA,WAAW,CAACN,EAAD,EAAK;AACZ,SAAKD,MAAL,GAAc,KAAKA,MAAL,CAAYQ,MAAZ,CAAmBH,KAAK,IAAIA,KAAK,CAACJ,EAAN,IAAYA,EAAxC,CAAd;AACH;;AACDQ,EAAAA,aAAa,CAACR,EAAD,EAAK;AACd,SAAKD,MAAL,GAAc,KAAKA,MAAL,CAAYU,GAAZ,CAAgBL,KAAK,IAAIA,KAAK,CAACJ,EAAN,IAAYA,EAAZ,GAAiB,EAAC,GAAGI,KAAJ;AAAWF,MAAAA,IAAI,EAAE,CAACE,KAAK,CAACF;AAAxB,KAAjB,GAAgDE,KAAzE,CAAd;AACH;;AAfO;;AAkBZ,eAAeP,KAAK,EAApB","sourcesContent":["import { makeAutoObservable } from \"mobx\"\n\n\nclass Toodo {\n    toodos = [\n        {id: 1, title: 'some text', flag: false},\n        {id: 2, title: 'some text', flag: true},\n        {id: 3, title: 'some text', flag: false},\n    ]\n    constructor() {\n        makeAutoObservable(this)\n    }\n    addToodo(toodo) {this.toodos.push(toodo)}\n    removeToodo(id) {\n        this.toodos = this.toodos.filter(toodo => toodo.id != id)\n    }\n    compliteToodo(id) {\n        this.toodos = this.toodos.map(toodo => toodo.id != id ? {...toodo, flag: !toodo.flag}: toodo)\n    }\n}\n\nexport default Toodo()"]},"metadata":{},"sourceType":"module"}