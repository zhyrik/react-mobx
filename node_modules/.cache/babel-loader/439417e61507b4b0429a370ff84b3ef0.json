{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\n\nclass Toodo {\n  constructor() {\n    this.toodos = [{\n      id: 1,\n      title: 'some text',\n      complited: false\n    }, {\n      id: 2,\n      title: 'some text',\n      complited: true\n    }, {\n      id: 3,\n      title: 'some text',\n      complited: false\n    }];\n    makeAutoObservable(this);\n  }\n\n  addToodo(toodo) {\n    this.toodos.push(toodo);\n  }\n\n  removeToodo(id) {\n    console.log(id);\n    this.toodos = this.toodos.filter(toodo => toodo.id === id);\n  }\n\n  compliteToodo(id) {\n    console.log(id);\n    this.toodos = this.toodos.map(toodo => toodo.id === id ? { ...toodo,\n      complited: !toodo.complited\n    } : toodo);\n  }\n\n  fetchToodo() {\n    fetch('https://jsonplaceholder.typicode.com/todos').then(response => response.json()).then(json => {\n      this.toodos = [...this.toodos, ...json];\n    });\n  }\n\n}\n\nexport default new Toodo();","map":{"version":3,"sources":["/home/z/Desktop/react1/mobx/src/store/toodo.js"],"names":["makeAutoObservable","Toodo","constructor","toodos","id","title","complited","addToodo","toodo","push","removeToodo","console","log","filter","compliteToodo","map","fetchToodo","fetch","then","response","json"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,MAAnC;;AAGA,MAAMC,KAAN,CAAY;AAMRC,EAAAA,WAAW,GAAG;AAAA,SALdC,MAKc,GALL,CACL;AAACC,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,KAAK,EAAE,WAAf;AAA4BC,MAAAA,SAAS,EAAE;AAAvC,KADK,EAEL;AAACF,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,KAAK,EAAE,WAAf;AAA4BC,MAAAA,SAAS,EAAE;AAAvC,KAFK,EAGL;AAACF,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,KAAK,EAAE,WAAf;AAA4BC,MAAAA,SAAS,EAAE;AAAvC,KAHK,CAKK;AACVN,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;;AACDO,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AAAC,SAAKL,MAAL,CAAYM,IAAZ,CAAiBD,KAAjB;AAAwB;;AACzCE,EAAAA,WAAW,CAACN,EAAD,EAAK;AACZO,IAAAA,OAAO,CAACC,GAAR,CAAYR,EAAZ;AACA,SAAKD,MAAL,GAAc,KAAKA,MAAL,CAAYU,MAAZ,CAAmBL,KAAK,IAAIA,KAAK,CAACJ,EAAN,KAAaA,EAAzC,CAAd;AACH;;AACDU,EAAAA,aAAa,CAACV,EAAD,EAAK;AACdO,IAAAA,OAAO,CAACC,GAAR,CAAYR,EAAZ;AACA,SAAKD,MAAL,GAAc,KAAKA,MAAL,CAAYY,GAAZ,CAAgBP,KAAK,IAAIA,KAAK,CAACJ,EAAN,KAAaA,EAAb,GAAkB,EAAC,GAAGI,KAAJ;AAAUF,MAAAA,SAAS,EAAG,CAACE,KAAK,CAACF;AAA7B,KAAlB,GAA2DE,KAApF,CAAd;AACH;;AACDQ,EAAAA,UAAU,GAAI;AACVC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUE,IAAI,IAAI;AACV,WAAKjB,MAAL,GAAc,CAAC,GAAG,KAAKA,MAAT,EAAiB,GAAGiB,IAApB,CAAd;AACH,KAJL;AAKH;;AAxBO;;AA2BZ,eAAe,IAAInB,KAAJ,EAAf","sourcesContent":["import { makeAutoObservable } from \"mobx\"\n\n\nclass Toodo {\n    toodos = [\n        {id: 1, title: 'some text', complited: false},\n        {id: 2, title: 'some text', complited: true},\n        {id: 3, title: 'some text', complited: false},\n    ]\n    constructor() {\n        makeAutoObservable(this)\n    }\n    addToodo(toodo) {this.toodos.push(toodo)}\n    removeToodo(id) {\n        console.log(id)\n        this.toodos = this.toodos.filter(toodo => toodo.id === id)\n    }\n    compliteToodo(id) {\n        console.log(id)\n        this.toodos = this.toodos.map(toodo => toodo.id === id ? {...toodo,complited:  !toodo.complited}: toodo)\n    }\n    fetchToodo () {\n        fetch('https://jsonplaceholder.typicode.com/todos')\n            .then(response => response.json())\n            .then(json => {\n                this.toodos = [...this.toodos, ...json]\n            })\n    }\n}\n\nexport default new Toodo()"]},"metadata":{},"sourceType":"module"}